This patch tries to fix a bug in ZopeTestCase's doctest framework, which
is caused by handing the http request headers to `publish_module`
contained in a StringIO buffer.  In normal use it's not a problem, since
parsing the headers (a few line before this patch) "seeks" the stream to
the start of the request body, so `processInputs` and ultimatively
`read_urlencoded` in cgi.py only parses the body.  However, after a
`Retry` exception, the input stream is reset (in HTTPRequest.py:133),
so this time `read_urlencode` cuts of the input based on the
`content-length` header.

To fix this problem, now the buffer passed as `stdin` is simply the
remainder of the former `instream` after parsing the headers.

--- Testing/ZopeTestCase/zopedoctest/functional.py~	2006-05-30 07:08:19.000000000 +0200
+++ Testing/ZopeTestCase/zopedoctest/functional.py	2006-08-28 15:59:22.000000000 +0200
@@ -174,11 +174,11 @@
     outstream = StringIO()
     response = Response(stdout=outstream, stderr=sys.stderr)
 
     publish_module('Zope2',
                    response=response,
-                   stdin=instream,
+                   stdin=StringIO(instream.read()),
                    environ=env,
                    debug=not handle_errors,
                   )
     header_output.setResponseStatus(response.getStatus(), response.errmsg)
     header_output.setResponseHeaders(response.headers)
